
; test.lispy â€” fixed version

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 1) Numbers & Arithmetic
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(+ 1 2 3)      ; => 6
(- 10 4)       ; => 6
(* 5 5)        ; => 25
(/ 20 4)       ; => 5
(- 42)         ; => -42

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 2) Symbols & Definitions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(def {x y} 100 200)
(print "x =" x)   ; => x = 100
(print "y =" y)   ; => y = 200

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 3) Strings & Escapes
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(print "Hello,\nLispy!")    ; newline escape
(print "Quote: \"Hi\"")     ; quote escape

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 4) Lists & Q-Expressions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(list 1 2 3 4)      ; => {1 2 3 4}
(head {1 2 3 4})    ; => {1}
(tail {1 2 3 4})    ; => {2 3 4}
(join {1 2} {3 4})  ; => {1 2 3 4}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 5) Eval & Quote
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; only splice the '+' symbol into the new expression:
(eval (join (list +) (list 5 3)))   ; => 8

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 6) Lambdas & Function Calls
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(def {add-two} (\\ {a b} {+ a b}))
(add-two 7 8)       ; => 15

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 7) Variable Assignment (= vs def)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(= {z} 42)
(print "z =" z)     ; => z = 42

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 8) Comparison & Conditionals
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(print "5 > 3?"  (> 5 3))    ; => 1
(print "5 < 3?"  (< 5 3))    ; => 0
(print "5 >= 5?" (>= 5 5))   ; => 1
(print "5 <= 4?" (<= 5 4))   ; => 0
(print "equal?"  (== 10 10)) ; => 1
(print "not equal?" (!= 10 8)) ; => 1

(if (> x y)
    (print "x is bigger")
    (print "y is bigger"))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 9) Error Handling
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(error "This is a custom error message")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 10) End of tests
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(print "All tests completed!")
